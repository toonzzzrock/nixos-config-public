# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, hardware, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];
  
  # Bootloader.
  # boot.kernelPackages = pkgs.linuxPackages_zen;
  boot.kernelPackages = pkgs.linuxPackages_cachyos-rc;
  # boot.kernelPatches = [
  #   { 
  #     name = "0003-Workaround-nv_vm_flags_-calling-GPL-only-code.patch"; 
  #     patch = ./nvidia-patch.patch;
  #   }
  #   { 
  #     name = "0004-Add-missing-include-for-nv_vm_flags.patch"; 
  #     patch = ./nvidia-patch2.patch;
  #   }
  #   { 
  #     name = "0005-Add-missing-include-for-nv_vm_flags.patch"; 
  #     patch = ./nvidia-patch3.patch;
  #   }
  # ];
  services.scx.package = pkgs.scx_git.full;

  boot.initrd.availableKernelModules = [ "xhci_pci" "vmd" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = ["i915"];
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.timeout = 1;
  boot.kernelParams = [
    "quiet"
    "splash"
    "fsck.mode=skip"
    # "apm=on"
    # "acpi=on"
    "preempt=full"
    "nosmt"
    "mitigations=off"
    "spec_store_bypass_disable=on"
    "spectre_v2=off"
    "nvidia-drm.modeset=1"
    "i915.enable_guc=2"
    "i915.fastboot=1"
    "i915.enable_fbc=1"
    "i915.enable_psr=1"
    "nowatchdog"
    "libahci.ignore_sss=1"
    "vfs_cache_pressure=1"
    "swappiness=1"
    # "ipv6.disable=1"
    "loglevel=0" 
    "rd.systemd.show_status=false"
    # "intel_pstate=passive"
    # "ZSTD_CLEVEL=1"
    "systemd.gpt_auto=no"
    # "SLAB_HWCACHE_ALIGN"
    "intel_iommu=on"
    "iommu=pt"
    "random.trust_cpu=on"
    # "acpi_osi=\"Linux\""
    "HZ_1000"
    "rcutree.enable_rcu_lazy=1"
    ];
    boot.blacklistedKernelModules = [
      "iTCO_wdt"
      "iTCO_vendor_support"
      "pcspkr"
      "joydev"
      "mac_hid"
      "stp"
      "llc"
  ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a0bf9745-e759-4cdd-a267-74412bedf27e";
      fsType = "ext4";
      options = [ "noatime" "nodiratime" "discard"];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/E729-8461";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices = [
    {
     device = "/dev/disk/by-uuid/e911b977-ee74-486d-b2a7-2b6cd6716ee6"; 
    }
   ];
  boot.resumeDevice = "/dev/disk/by-uuid/e911b977-ee74-486d-b2a7-2b6cd6716ee6";

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;
  



  # nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  # nix.settings.system-features = lib.mkForce [
  #   "benchmark"
  #   "big-parallel"
  #   "kvm"
  #   "nixos-test"
  #   # "gccarch-x86-64-v3"
  # ];
  nixpkgs.hostPlatform = {
    # gcc.arch = "x86-64-v3";
    # gcc.tune = "x86-64-v4";
    system = "x86_64-linux";
  };
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
